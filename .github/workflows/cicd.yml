name: CI-CD Backend and Frontend

on:
  # push:
  #   branches: [ main ]
    
  workflow_dispatch:

jobs:
  # Build-Backend:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Docker Login
  #       uses: docker/login-action@v1.10.0
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USER }}
  #         password: ${{ secrets.DOCKERHUB_PWD }}

  #     - name: Docker Build and Push Docker registry
  #       uses: docker/build-push-action@v2.7.0
  #       with:
  #         context: ./Backend
  #         file: ./Backend/Dockerfile
  #         push: true
  #         tags: |
  #           giov3nn10/proeventos-backend:latest
  #           giov3nn10/proeventos-backend:${{ github.run_number }}
          
  # Build-FrontEnd:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Docker Login
  #       uses: docker/login-action@v1.10.0
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USER }}
  #         password: ${{ secrets.DOCKERHUB_PWD }}
          
  #     - name: Docker Build and Push Docker registry
  #       uses: docker/build-push-action@v2.7.0
  #       with:
  #         context: ./Frontend/
  #         file: ./Frontend/Dockerfile
  #         push: true
  #         tags: |
  #           giov3nn10/proeventos-frontend:latest
  #           giov3nn10/proeventos-frontend:${{ github.run_number }} 

  Deploy-Backend:
    # needs: Build-Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build, Push and Deploy to Heroku # set whatever name you want to this step
        id: heroku
        uses: jctaveras/heroku-deploy@v1.0.0 # use the latest version of the action
        with:
          email: ${{ secrets.HEROKU_EMAIL }} # your heroku email
          api_key: ${{ secrets.HEROKU_API_KEY }} # your heroku api key
          app_name: ${{ secrets.HEROKU_BACKEND_APP_NAME }} # you aplication name
          dockerfile_path: './Backend/' # set the path to the folder where the Dockerfile is located
